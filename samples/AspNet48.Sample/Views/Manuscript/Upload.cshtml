@model AspNet48.Sample.Models.ManuscriptUploadViewModel
@{
    ViewBag.Title = "Upload Manuscript";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-5">
    <div class="row">
        <div class="col-lg-8 mx-auto">
            <div class="text-center mb-5">
                <h2 class="display-6 mb-3">
                    <i class="fas fa-file-upload text-primary me-2"></i>
                    Upload Manuscript
                </h2>
                <p class="text-muted">
                    Upload your manuscript to receive AI-powered referee candidates and journal recommendations
                </p>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-upload me-2"></i>Manuscript Upload Form
                    </h5>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Upload", "Manuscript", FormMethod.Post, new { enctype = "multipart/form-data", @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        
                        <div class="row g-3">
                            <!-- Manuscript File -->
                            <div class="col-12">
                                <label for="manuscriptFile" class="form-label">
                                    <i class="fas fa-file me-1"></i>@Html.DisplayNameFor(m => m.ManuscriptFile) *
                                </label>
                                <input type="file" class="form-control @(Html.ViewData.ModelState.IsValidField("ManuscriptFile") ? "" : "is-invalid")" 
                                       id="manuscriptFile" name="ManuscriptFile" accept=".pdf,.doc,.docx,.txt" required>
                                @Html.ValidationMessageFor(m => m.ManuscriptFile, "", new { @class = "invalid-feedback" })
                                <div class="form-text">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Supported formats: PDF, DOC, DOCX, TXT (Max size: 10MB)
                                </div>
                            </div>

                            <!-- Title -->
                            <div class="col-md-6">
                                <label for="title" class="form-label">
                                    <i class="fas fa-heading me-1"></i>@Html.DisplayNameFor(m => m.Title) *
                                </label>
                                @Html.TextBoxFor(m => m.Title, new { @class = "form-control " + (Html.ViewData.ModelState.IsValidField("Title") ? "" : "is-invalid"), placeholder = "Enter manuscript title", required = "required" })
                                @Html.ValidationMessageFor(m => m.Title, "", new { @class = "invalid-feedback" })
                            </div>

                            <!-- Folder/Journal -->
                            <div class="col-md-6">
                                <label for="folder" class="form-label">
                                    <i class="fas fa-folder me-1"></i>@Html.DisplayNameFor(m => m.Folder)
                                </label>
                                @Html.TextBoxFor(m => m.Folder, new { @class = "form-control " + (Html.ViewData.ModelState.IsValidField("Folder") ? "" : "is-invalid"), placeholder = "e.g., Nature, Science, PLOS ONE" })
                                @Html.ValidationMessageFor(m => m.Folder, "", new { @class = "invalid-feedback" })
                                <div class="form-text">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Optional: Specify the target journal or folder for organization
                                </div>
                            </div>

                            <!-- Abstract -->
                            <div class="col-12">
                                <label for="abstract" class="form-label">
                                    <i class="fas fa-align-left me-1"></i>@Html.DisplayNameFor(m => m.Abstract)
                                </label>
                                @Html.TextAreaFor(m => m.Abstract, new { @class = "form-control " + (Html.ViewData.ModelState.IsValidField("Abstract") ? "" : "is-invalid"), rows = "4", placeholder = "Enter manuscript abstract (optional)" })
                                @Html.ValidationMessageFor(m => m.Abstract, "", new { @class = "invalid-feedback" })
                                <div class="form-text">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Providing an abstract helps improve referee matching accuracy
                                </div>
                            </div>

                            <!-- Author Information -->
                            <div class="col-12">
                                <h6 class="border-bottom pb-2 mb-3">
                                    <i class="fas fa-user me-2"></i>Author Information (Optional)
                                </h6>
                            </div>

                            <div class="col-md-4">
                                <label for="authorName" class="form-label">
                                    <i class="fas fa-user me-1"></i>@Html.DisplayNameFor(m => m.AuthorName)
                                </label>
                                @Html.TextBoxFor(m => m.AuthorName, new { @class = "form-control " + (Html.ViewData.ModelState.IsValidField("AuthorName") ? "" : "is-invalid"), placeholder = "Dr. John Doe" })
                                @Html.ValidationMessageFor(m => m.AuthorName, "", new { @class = "invalid-feedback" })
                            </div>

                            <div class="col-md-4">
                                <label for="authorEmail" class="form-label">
                                    <i class="fas fa-envelope me-1"></i>@Html.DisplayNameFor(m => m.AuthorEmail)
                                </label>
                                @Html.TextBoxFor(m => m.AuthorEmail, new { @class = "form-control " + (Html.ViewData.ModelState.IsValidField("AuthorEmail") ? "" : "is-invalid"), placeholder = "john.doe@university.edu" })
                                @Html.ValidationMessageFor(m => m.AuthorEmail, "", new { @class = "invalid-feedback" })
                            </div>

                            <div class="col-md-4">
                                <label for="authorAffiliation" class="form-label">
                                    <i class="fas fa-university me-1"></i>@Html.DisplayNameFor(m => m.AuthorAffiliation)
                                </label>
                                @Html.TextBoxFor(m => m.AuthorAffiliation, new { @class = "form-control " + (Html.ViewData.ModelState.IsValidField("AuthorAffiliation") ? "" : "is-invalid"), placeholder = "University of Science" })
                                @Html.ValidationMessageFor(m => m.AuthorAffiliation, "", new { @class = "invalid-feedback" })
                            </div>
                        </div>

                        <!-- Submit Button -->
                        <div class="row mt-4">
                            <div class="col-12">
                                <button type="submit" class="btn btn-prophy btn-lg w-100" id="uploadBtn">
                                    <i class="fas fa-upload me-2"></i>Upload and Analyze Manuscript
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Information Section -->
            <div class="row mt-5">
                <div class="col-md-6">
                    <div class="card h-100">
                        <div class="card-body">
                            <h6 class="card-title">
                                <i class="fas fa-info-circle text-info me-2"></i>What Happens Next?
                            </h6>
                            <ul class="list-unstyled mb-0">
                                <li class="mb-2">
                                    <i class="fas fa-check text-success me-2"></i>
                                    Your manuscript will be uploaded to the Prophy API
                                </li>
                                <li class="mb-2">
                                    <i class="fas fa-check text-success me-2"></i>
                                    AI analysis will generate referee candidate recommendations
                                </li>
                                <li class="mb-2">
                                    <i class="fas fa-check text-success me-2"></i>
                                    You'll receive suitable journal recommendations
                                </li>
                                <li class="mb-0">
                                    <i class="fas fa-check text-success me-2"></i>
                                    Results will be displayed with detailed metrics
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card h-100">
                        <div class="card-body">
                            <h6 class="card-title">
                                <i class="fas fa-shield-alt text-primary me-2"></i>Data Security
                            </h6>
                            <ul class="list-unstyled mb-0">
                                <li class="mb-2">
                                    <i class="fas fa-lock text-success me-2"></i>
                                    All communications use HTTPS encryption
                                </li>
                                <li class="mb-2">
                                    <i class="fas fa-lock text-success me-2"></i>
                                    API keys are securely managed
                                </li>
                                <li class="mb-2">
                                    <i class="fas fa-lock text-success me-2"></i>
                                    File uploads are validated and sanitized
                                </li>
                                <li class="mb-0">
                                    <i class="fas fa-lock text-success me-2"></i>
                                    This is a demonstration environment
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function() {
            // File validation
            $('#manuscriptFile').on('change', function() {
                const file = this.files[0];
                const maxSize = 10 * 1024 * 1024; // 10MB
                const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'text/plain'];
                
                if (file) {
                    // Check file size
                    if (file.size > maxSize) {
                        $(this).addClass('is-invalid');
                        $('.invalid-feedback').text('File size cannot exceed 10MB.');
                        return;
                    }
                    
                    // Check file type
                    if (!allowedTypes.includes(file.type)) {
                        $(this).addClass('is-invalid');
                        $('.invalid-feedback').text('Only PDF, DOC, DOCX, and TXT files are allowed.');
                        return;
                    }
                    
                    $(this).removeClass('is-invalid');
                    $('.invalid-feedback').text('');
                }
            });

            // Form submission with loading state
            $('form').on('submit', function() {
                const btn = $('#uploadBtn');
                btn.prop('disabled', true);
                btn.html('<i class="fas fa-spinner fa-spin me-2"></i>Uploading and Analyzing...');
                
                // Re-enable after 30 seconds to prevent permanent lockup
                setTimeout(function() {
                    btn.prop('disabled', false);
                    btn.html('<i class="fas fa-upload me-2"></i>Upload and Analyze Manuscript');
                }, 30000);
            });

            // Auto-fill title from filename
            $('#manuscriptFile').on('change', function() {
                const file = this.files[0];
                if (file && !$('#title').val()) {
                    const filename = file.name;
                    const nameWithoutExt = filename.substring(0, filename.lastIndexOf('.')) || filename;
                    $('#title').val(nameWithoutExt);
                }
            });
        });
    </script>
} 